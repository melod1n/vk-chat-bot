import {Command, Requirement, Requirements} from '../model/chat-command';
import {LoadManager} from '../api/load-manager';
import {Api} from '../api/api';

export class Online extends Command {

    regexp = /^\/online/i;
    title = '/online';
    name = '/online';
    description = 'users who online';

    requirements = Requirements.Create(Requirement.CHAT);

    async execute(context): Promise<void> {
        const waitContext = await context.send('—Å–µ–∫—É–Ω–¥—É...');

        const users = (await LoadManager.chats.loadSingle(context.peerId)).users;
        const allCount = users.length;

        const hiddenOnlineUsers = users.filter((user) => !user.onlineVisible);
        const onlineUsers = users.filter((user) => user.online);

        let text = `–í —Å–µ—Ç–∏ (${onlineUsers.length}/${allCount})\n`;

        for (const user of onlineUsers) {
            const sexIcon = `${user.sex == 0 ? 'üëΩ' : user.sex == 1 ? 'üö∫' : 'üöπ'}`;
            const platform = user.onlineMobile ? 'üì±' : 'üíª';
            const name = `@id${user.id}(${user.firstName} ${user.lastName})`;
            const sex = `–∑–∞—à${user.sex == 1 ? '–ª–∞' : user.sex == 0 ? '–ª–æ' : '—ë–ª'}`;
            const time = `${!user.onlineVisible ? '' : `${new Date(user.lastSeen * 1000).toLocaleString()}`}`;

            text += `${sexIcon} ${platform} ${name} ${time === '' ? '' : sex} ${time}\n`;
        }

        if (onlineUsers.length == 0) text = '–í—Å–µ –æ—Ñ–ª–∞–π–Ω üò¢';
        if (hiddenOnlineUsers.length > 0) {
            text += `\n(–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–∫—Ä—ã–≤—à–∏—Ö –æ–Ω–ª–∞–π–Ω: ${hiddenOnlineUsers.length})`;
        }

        await Api.editMessage(context.peerId, waitContext.conversationMessageId, text);
    }

}